version: 2.1
orbs:
  slack: circleci/slack@3.4.2
  aws-cli: circleci/aws-cli@4.0.0

jobs:
  login-to-aws:
    docker: &docker_image
      - image: 'cimg/ruby:3.1.3-node'
    steps:
      - checkout
      - aws-cli/setup:
          role_arn: $ECR_ROLE_TO_ASSUME # this will use the env var
          region: $ECR_REGION # this will use the env var
      - run: &ecr_login
          name: Login to ecr
          command: |
            aws ecr get-login-password --region $ECR_REGION | docker login --username AWS --password-stdin ${AWS_ECR_REGISTRY_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com
            aws configure export-credentials --format env
      - run: |
          cp $BASH_ENV bash.env
      - persist_to_workspace:
          root: .
          paths:
            - bash.env
  test:
    working_directory: ~/circle
    docker:
      - image: cimg/ruby:3.1.3
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: lint
          command: docker-compose run --rm app bundle exec rubocop
      - run:
          name: test
          command: docker-compose run --rm app bundle exec rspec
      - slack/status: &slack_status
          fail_only: true
          only_for_branches: master
          failure_message: ":facepalm:  Failed job $CIRCLE_JOB  :homer-disappear:"
          include_job_number_field: false
  deploy_staging_api:
    working_directory: ~/circle/git/hmcts-complaints-formbuilder-adapter
    docker: &ecr_base_image
      - image: docker.io/ministryofjustice/fb-builder:latest
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: &workspace_envs
          command: |
            cat bash.env >> $BASH_ENV
      - setup_remote_docker
      - add_ssh_keys: &ssh-keys
          fingerprints:
            - b6:94:b5:ea:b1:3a:92:9b:44:db:94:a7:3d:c0:dd:48
      - run:
          name: Setup base environment variable
          command: |
            echo "export BUILD_SHA=$CIRCLE_SHA1" >> $BASH_ENV
            echo "export SSH_FILE_FOR_SECRETS=~/.ssh/id_rsa_b694b5eab13a929b44db94a73dc0dd48" >> $BASH_ENV
      - run: &deploy_scripts
          name: cloning deploy scripts
          command: 'git clone --branch temporary-ecr-creds git@github.com:ministryofjustice/fb-deploy.git deploy-scripts'
      - run:
          name: build and push docker images
          environment:
            ENVIRONMENT_NAME: staging
            BUILD_WORKER: false
          command: './deploy-scripts/bin/build'
      - run:
          name: deploy to staging (EKS cluster)
          environment:
            APPLICATION_NAME: hmcts-complaints-formbuilder-adapter
            PLATFORM_ENV: staging
            K8S_NAMESPACE: hmcts-complaints-formbuilder-adapter-staging
          command: './deploy-scripts/bin/deploy-eks'
      - slack/status: *slack_status

  deploy_staging_worker:
    working_directory: ~/circle/git/hmcts-complaints-formbuilder-adapter
    docker: *ecr_base_image
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: *workspace_envs
      - setup_remote_docker
      - aws-cli/setup:
          role_arn: $WORKERS_ECR_ROLE_TO_ASSUME # this will use the env var
          region: $ECR_REGION # this will use the env var
      - add_ssh_keys: *ssh-keys
      - run:
          name: Setup base environment variable
          command: |
            echo "export BUILD_SHA=$CIRCLE_SHA1" >> $BASH_ENV
            echo "export SSH_FILE_FOR_SECRETS=~/.ssh/id_rsa_b694b5eab13a929b44db94a73dc0dd48" >> $BASH_ENV
            echo "export BUILD_WORKER=true" >> $BASH_ENV
      - run: *deploy_scripts
      - run:
          name: build and push docker images
          environment:
            ENVIRONMENT_NAME: staging
            BUILD_WORKER: true
          command: './deploy-scripts/bin/build'
      - run:
          name: deploy to staging (EKS cluster)
          environment:
            APPLICATION_NAME: hmcts-complaints-formbuilder-adapter
            PLATFORM_ENV: staging
            K8S_NAMESPACE: hmcts-complaints-formbuilder-adapter-staging
          command: './deploy-scripts/bin/deploy-eks'
      - slack/status: *slack_status

  deploy_production:
    working_directory: ~/circle/git/hmcts-complaints-formbuilder-adapter
    docker: *ecr_base_image
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: .
      - run: *workspace_envs
      - add_ssh_keys: *ssh-keys
      - run:
          name: Setup base environment variable
          command: |
            echo "export BUILD_SHA=$CIRCLE_SHA1" >> $BASH_ENV
            echo "export SSH_FILE_FOR_SECRETS=~/.ssh/id_rsa_b694b5eab13a929b44db94a73dc0dd48" >> $BASH_ENV
      - run:
          name: cloning deploy scripts
          command: 'git clone --branch temporary-ecr-creds git@github.com:ministryofjustice/fb-deploy.git deploy-scripts'
      - run:
          name: build and push docker images
          environment:
            ENVIRONMENT_NAME: production
          command: './deploy-scripts/bin/build'
      - run:
          name: deploy to production (eks)
          environment:
            APPLICATION_NAME: hmcts-complaints-formbuilder-adapter
            PLATFORM_ENV: production
            K8S_NAMESPACE: hmcts-complaints-formbuilder-adapter-production
          command: './deploy-scripts/bin/deploy-eks'
      - slack/status:
          only_for_branches: master
          success_message: ":rocket:  Successfully deployed to Live  :guitar:"
          failure_message: ":alert:  Failed to deploy to Live  :try_not_to_cry:"
          include_job_number_field: false

workflows:
  version: 2
  release:
    jobs:
      - login-to-aws:
          context: &context
            - moj-forms
      - test:
          requires:
            - login-to-aws
      - deploy_staging_api:
          context: *context
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - ecr-migration
      - deploy_staging_worker:
          context: *context
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - ecr-migration
      - slack/approval-notification:
          message: ":portalorangeparrot:  Deployment to Live pending approval  :portalblueparrot:"
          include_job_number_field: false
          requires:
            - deploy_staging_api
            - deploy_staging_worker
      - confirm_production_deploy:
          type: approval
          requires:
            - deploy_staging_api
            - deploy_staging_worker
          filters:
            branches:
              only: master
      - deploy_production:
          context: *context
          requires:
            - confirm_production_deploy
          filters:
            branches:
              only: master
